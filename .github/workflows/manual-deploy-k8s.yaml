name: Deploy/Destroy Infrastructure Manually

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Terraform Action to Perform'
        type: choice
        options:
        - Terraform_apply
        - Terraform_destroy

env:
  TF_LOG: INFO
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
  terraform-k8s-apply:
    name: Deploy k8s Infrastrucure
    if: ${{ github.event.inputs.action == 'Terraform_apply' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./terraform/k8s

    steps:
    - name: Checkout the repository
      uses: actions/checkout@v4

    - uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: "1.1.7"

    - name: Executes Terraform init
      id: init
      run: terraform init

    - name: Executes Terraform format
      id: fmt
      run: terraform fmt -check

    - name: Executes Terraform validate
      id: validate
      run: terraform validate
    
    - name: Executes Terraform plan
      id: plan
      if: github.event_name == 'pull_request'
      run: terraform plan -no-color -input=false --var-file=dev.tfvars
      continue-on-error: true

    - name: Terraform Plan Status
      if: steps.plan.outcome == 'failure'
      run: exit 1

    - name: Terraform Apply
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: terraform apply -auto-approve -input=false --var-file=dev.tfvars
  terraform-k8s-observability-apply:
    name: Deploy k8s-observability Infrastrucure
    if: ${{ github.event.inputs.action == 'Terraform_apply' }}
    needs: [terraform-k8s-apply]
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./terraform/k8s-observability

    steps:
    - name: Checkout the repository
      uses: actions/checkout@v4

    - uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: "1.1.7"

    - name: Executes Terraform init
      id: init
      run: terraform init

    - name: Executes Terraform format
      id: fmt
      run: terraform fmt -check

    - name: Executes Terraform validate
      id: validate
      run: terraform validate
    
    - name: Configure Kubeconfig
      run: terraform apply -auto-approve -input=false -target=null_resource.kubectl

    - name: Executes Terraform plan 
      id: plan
      if: github.event_name == 'pull_request'
      run: terraform plan -no-color -input=false --var-file=dev.tfvars
      continue-on-error: true

    - name: Terraform Plan Status
      if: steps.plan.outcome == 'failure'
      run: exit 1

    - name: Terraform Apply
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: terraform apply -auto-approve -input=false --var-file=dev.tfvars
  terraform-k8s-observability-destroy:
    name: Destroy k8s-observability Infrastrucure
    if: ${{ github.event.inputs.action == 'Terraform_destroy' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./terraform/k8s-observability

    steps:
    - name: Checkout the repository
      uses: actions/checkout@v4

    - uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: "1.1.7"

    - name: Executes Terraform init
      id: init
      run: terraform init

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-region: "us-east-1"

    - name: Generate kubeconfig
      run: echo "EKS_CREDS=$(aws eks update-kubeconfig --region us-east-2 --name my-cluster --dry-run | base64) >> $GITHUB_ENV"

    - name: Terraform Destroy
      id: destroy
      run: terraform destroy -auto-approve
  terraform-k8s-destroy:
    name: Destroy k8s Infrastrucure
    if: ${{ github.event.inputs.action == 'Terraform_destroy' }}
    needs: [terraform-k8s-observability-destroy]
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./terraform/k8s

    steps:
    - name: Checkout the repository
      uses: actions/checkout@v4

    - uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: "1.1.7"

    - name: Executes Terraform init
      id: init
      run: terraform init

    - name: Terraform Destroy
      id: destroy
      run: terraform destroy -auto-approve --var-file=dev.tfvars
  

